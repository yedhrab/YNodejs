{"version":3,"sources":["../../../lib/controllers/template.js"],"names":["template","marked","require","data","callback","namespace","__filename","name","templateDir","templateString","Info","Detail","method","trimmedPath"],"mappings":";;;;;QAoBgBA,Q,GAAAA,Q;;AAhBhB;;AACA;;AACA;;AAEA,MAAMC,SAASC,QAAQ,QAAR,CAAf;;AAEA;;;;;;;;;;AAVA;;;;AAoBO,SAASF,QAAT,CAAkBG,IAAlB,EAAwBC,QAAxB,EAAkC;AACvC;AACA,QAAMC,YAAY,0BAAaC,UAAb,EAAyBN,SAASO,IAAlC,CAAlB;;AAEA;AACA,MAAI,iCAAgBJ,IAAhB,EAAsB,KAAtB,CAAJ,EAAkC;AAChC,UAAMK,cAAc,0CAAyBL,IAAzB,CAApB;;AAEA,wCAAoBK,WAApB,EAAiCC,kBAAkB;AACjD,UAAIA,cAAJ,EAAoB;AAClB,2BAAMJ,SAAN,EAAiB,QAAjB,EAA4B,IAAGG,WAAY,6BAA3C;AACAJ,iBAAS,GAAT,EAAcK,cAAd,EAA8B,MAA9B;AACD,OAHD,MAGO;AACL;AACD;AACF,KAPD;AAQD,GAXD,MAWO;AACL,uBAAMJ,SAAN,EAAiB,OAAjB,EAA2B,IAAGF,IAAK,sCAAnC;AACAC,aACE,GADF,EAEE;AACEM,YAAM,kCADR;AAEEC,cAAS,UAASR,KAAKS,MAAO,KAAIT,KAAKU,WAAY;AAFrD,KAFF,EAME,MANF;AAQD;AACF","file":"template.js","sourcesContent":["/*\r\n * Sayfa kalıbı işleyicileri\r\n */\r\n\r\nimport { dataTrimmedPathRegulator, checkDataMethod } from \"../utils/regulators\";\r\nimport { getFullTemplate, getTemplate, getNotFoundPage, getMarkdownTemplate } from \"../utils/templates\";\r\nimport { debug, getNamespace } from \"../utils/common\";\r\n\r\nconst marked = require(\"marked\");\r\n\r\n/**\r\n * Site kalıplarının işleyicisi\r\n * - *Örnek: `localhost:3000/<templateName>` yazıldığında bu fonksiyon çalışır.*\r\n * - *Not: `templateName`, adres çubuğuna yazılan kalıp ismidir. (index, account/create)*\r\n * @param {object} data Index.js\"te tanımlanan veri objesidir. İstekle gelir.\r\n * @param {function(number, string, string):void} callback İşlemler bittiği zaman verilen yanıt\r\n * - *arg0: HTTP varsayılan durum kodları*\r\n * - *arg0: HTTP yanıtı veya ilgili ek açıklamalar {Info, Detail?}*\r\n * - *arg1: İçerik tipi (Content-type) [http, json vs.]*\r\n */\r\nexport function template(data, callback) {\r\n  // Debug metni\r\n  const namespace = getNamespace(__filename, template.name);\r\n\r\n  // Sadece get metoduyla çalışır\r\n  if (checkDataMethod(data, \"get\")) {\r\n    const templateDir = dataTrimmedPathRegulator(data);\r\n\r\n    getMarkdownTemplate(templateDir, templateString => {\r\n      if (templateString) {\r\n        debug(namespace, \"succes\", `'${templateDir}' için sayfa alımı başarılı`);\r\n        callback(200, templateString, \"html\");\r\n      } else {\r\n        getNotFoundPage();\r\n      }\r\n    });\r\n  } else {\r\n    debug(namespace, \"error\", `'${data}' isteği ile gelen metot 'get' değil`);\r\n    callback(\r\n      405,\r\n      {\r\n        Info: \"İstekle gelen metot hatalıdır :(\",\r\n        Detail: `Metot: ${data.method} /${data.trimmedPath}`\r\n      },\r\n      \"json\"\r\n    );\r\n  }\r\n}\r\n"]}