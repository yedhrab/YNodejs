{"version":3,"sources":["../../../lib/utils/regulators.js"],"names":["checkDataMethod","dataTrimmedPathRegulator","fixString","fixStatusCode","fixContentType","fixPayload","fixPayloadForJSON","fixPayloadForHTML","fixPayloadForDefault","data","httpMethod","method","toLowerCase","e","trimmedPath","str","force","trim","length","statusCode","contentTypes","json","js","html","css","plain","favicon","png","jpg","contentType","payloadFixTypes","default","payload","JSON","stringify"],"mappings":";;;;;QAcgBA,e,GAAAA,e;QAaAC,wB,GAAAA,wB;QAcAC,S,GAAAA,S;QAaAC,a,GAAAA,a;QAyBAC,c,GAAAA,c;QAsBAC,U,GAAAA,U;QAYAC,iB,GAAAA,iB;QAYAC,iB,GAAAA,iB;QAWAC,oB,GAAAA,oB;AAxIhB;;AAEA;;;;;AAKA;;;;;;;AAOO,SAASR,eAAT,CAAyBS,IAAzB,EAA+BC,UAA/B,EAA2C;AAChD,MAAI;AACF,WAAOD,KAAKE,MAAL,CAAYC,WAAZ,MAA6BF,WAAWE,WAAX,EAApC;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF;;AAED;;;;;AAKO,SAASZ,wBAAT,CAAkCQ,IAAlC,EAAwC;AAC7C,SAAOA,KAAKK,WAAL,IAAoB,EAApB,GAAyB,OAAzB,GAAmCL,KAAKK,WAA/C;AACD;;AAED;AACA;AACA;;AAEA;;;;;;AAMO,SAASZ,SAAT,CAAmBa,GAAnB,EAAwBC,QAAQ,KAAhC,EAAuC;AAC5C,SAAO,OAAOD,GAAP,IAAc,QAAd,IAA0BA,IAAIE,IAAJ,GAAWC,MAAX,GAAoB,CAA9C,GACHH,IAAIE,IAAJ,EADG,GAEHD,QACA,EADA,GAEA,KAJJ;AAKD;;AAED;;;;;AAKO,SAASb,aAAT,CAAuBgB,UAAvB,EAAmC;AACxC,SAAO,OAAOA,UAAP,IAAqB,QAArB,GACHA,UADG,GAEH,GAFJ;AAGD;;AAED;;;AAGO,MAAMC,sCAAe;AAC1BC,QAAM,kBADoB;AAE1BC,MAAI,wBAFsB;AAG1BC,QAAM,WAHoB;AAI1BC,OAAK,UAJqB;AAK1BC,SAAO,YALmB;AAM1BC,WAAS,cANiB;AAO1BC,OAAK,WAPqB;AAQ1BC,OAAK;;AAGP;;;;;AAX4B,CAArB,CAgBA,SAASxB,cAAT,CAAwByB,WAAxB,EAAqC;AAC1C,SAAO,OAAOA,WAAP,IAAsB,QAAtB,GACHA,WADG,GAEH,MAFJ;AAGD;;AAED;;;;AAIA,MAAMC,kBAAkB;AACtBT,QAAMf,iBADgB;AAEtBiB,QAAMhB,iBAFgB;AAGtBwB,WAASvB;;AAGX;;;;;;AANwB,CAAxB,CAYO,SAASH,UAAT,CAAoBwB,WAApB,EAAiCG,OAAjC,EAA0C;AAC/C;AACA,SAAO,OAAOF,gBAAgBD,WAAhB,CAAP,KAAwC,WAAxC,GACHC,gBAAgBD,WAAhB,EAA6BG,OAA7B,CADG,GAEHF,gBAAgB,SAAhB,EAA2BE,OAA3B,CAFJ;AAGD;;AAED;;;;;AAKO,SAAS1B,iBAAT,CAA2B0B,OAA3B,EAAoC;AACzCA,YAAU,OAAOA,OAAP,IAAkB,QAAlB,GACNA,OADM,GACI,EADd;;AAGA,SAAOC,KAAKC,SAAL,CAAeF,OAAf,CAAP;AACD;;AAED;;;;;AAKO,SAASzB,iBAAT,CAA2ByB,OAA3B,EAAoC;AACzC,SAAO,OAAOA,OAAP,IAAkB,QAAlB,GACHA,OADG,GAEH,EAFJ;AAGD;;AAED;;;;;AAKO,SAASxB,oBAAT,CAA8BwB,OAA9B,EAAuC;AAC5C,SAAO,OAAOA,OAAP,KAAmB,WAAnB,GACHA,OADG,GAEH,EAFJ;AAGD","file":"regulators.js","sourcesContent":["// import { projectName } from \"../config\";\r\n\r\n/*\r\n * Düzenleyici metodlar\r\n * @auther Yunus Emre\r\n */\r\n\r\n/**\r\n * Http methodu kontrolünü sağlar\r\n * - *Not: Büyük-küçük harf duyarlı değildir*\r\n * @param {object} data Index.js\"te tanımlanan veri objesidir\r\n * @param {string} httpMethod GET, set, Post ...\r\n * @return {boolean} Eğer eşit ise `true`\r\n */\r\nexport function checkDataMethod(data, httpMethod) {\r\n  try {\r\n    return data.method.toLowerCase() == httpMethod.toLowerCase();\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Adres çubuğu yolu düzenleyici\r\n * @param {object} data Index.js\"te tanımlanan veri objesidir\r\n * @return {string} Varsa adres çubuğundaki yolu yoksa `'index'` dizgisini döndürür\r\n */\r\nexport function dataTrimmedPathRegulator(data) {\r\n  return data.trimmedPath == \"\" ? \"index\" : data.trimmedPath;\r\n}\r\n\r\n////////////////////////////////////////////////////////\r\n// -------------- DÜZENLEYİCİ METODLAR -------------- //\r\n////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Dizgiyi düzeltme\r\n * @param {string} str Dizgi\r\n * @param {boolean} force Dizgi olmaya zorlanmalı mı *(varsayılan false)*\r\n * @return {string | boolean} Dizgi düzgün ise kendisi, değilse false veya boş dizgi\r\n */\r\nexport function fixString(str, force = false) {\r\n  return typeof str == \"string\" && str.trim().length > 0\r\n    ? str.trim()\r\n    : force\r\n    ? \"\"\r\n    : false;\r\n}\r\n\r\n/**\r\n * Durum kodu düzeltmesi\r\n * @param {number} statusCode Durum kodu (200, 404)\r\n * @return {number | boolean} Hata varsa false yoksa durum kodunu döndürür\r\n */\r\nexport function fixStatusCode(statusCode) {\r\n  return typeof statusCode == 'number' ?\r\n      statusCode :\r\n      200;\r\n}\r\n\r\n/**\r\n * Uzantı türlerine göre, başlık tipleri\r\n */\r\nexport const contentTypes = {\r\n  json: 'application/json',\r\n  js: 'application/javascript',\r\n  html: 'text/html',\r\n  css: 'text/css',\r\n  plain: 'text/plain',\r\n  favicon: 'image/x-icon',\r\n  png: 'image/png',\r\n  jpg: 'image/jpg',\r\n}\r\n\r\n/**\r\n * İçerik tipi düzeltmesi\r\n * @param {string} contentType İçerik tipi (json, html, css..)\r\n * @return {string | boolean} Hata varsa false yoksa içerik tipini döndürür\r\n */\r\nexport function fixContentType(contentType) {\r\n  return typeof contentType == 'string' ?\r\n      contentType :\r\n      'json';\r\n}\r\n\r\n/**\r\n * Yük (bilgayar verisi) düzeltme tipleri\r\n * - *Not: fixPayload içerisinde kullanılır*\r\n */\r\nconst payloadFixTypes = {\r\n  json: fixPayloadForJSON,\r\n  html: fixPayloadForHTML,\r\n  default: fixPayloadForDefault\r\n}\r\n\r\n/**\r\n * Yükü düzeltme\r\n * @param {string} contentType İçerik tipi (json, html, css..) \r\n * @param {object} payload Yük objesi\r\n * @return {string} Yük dizgisi\r\n */\r\nexport function fixPayload(contentType, payload) {\r\n  // İçerik türüne göre yük (bilgisayar) verisi işleme\r\n  return typeof payloadFixTypes[contentType] !== 'undefined' ?\r\n      payloadFixTypes[contentType](payload) :\r\n      payloadFixTypes['default'](payload);\r\n}\r\n\r\n/**\r\n * Yükü JSON için düzeltme\r\n * @param {object} payload Yük objesi\r\n * @return {string} JSON dizgisi\r\n */\r\nexport function fixPayloadForJSON(payload) {\r\n  payload = typeof payload == 'object' ?\r\n      payload : {};\r\n\r\n  return JSON.stringify(payload);\r\n}\r\n\r\n/**\r\n* Yükü HTML için düzeltme\r\n* @param {string} payload Yük objesi\r\n* @return {string} Yük dizgisi\r\n*/\r\nexport function fixPayloadForHTML(payload) {\r\n  return typeof payload == 'string' ?\r\n      payload :\r\n      '';\r\n}\r\n\r\n/**\r\n* Yükü varsayılan olarak düzeltme\r\n* @param {object} payload Yük objesi\r\n* @return {string} Yük dizgisi\r\n*/\r\nexport function fixPayloadForDefault(payload) {\r\n  return typeof payload !== 'undefined' ?\r\n      payload :\r\n      '';\r\n}"]}